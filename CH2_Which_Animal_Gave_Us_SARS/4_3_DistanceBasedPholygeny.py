__author__ = 'ilap'

from bioLibrary import *
'''
Definitions:
    @@@@ 4.3
    * Limbs: leaf's edge connected to it's parents. e.g. A--i--B --j--C--k--D i,k limbs, j internal edge
    * Internal Edge: Edges that are not limbs must connect two internal nodes.

    * Recursive algorithm:
        = Find a pair of neighboring leaves i and j by selecting the minimum elemen Dij in the D matrix
        = replace i and j with their parent, and recompute the distances from this parent to all other leaves as above.
        = solve the the Distance-Based-Phylogeny problem for the smaller tree
        = add the previously removed leaves i and j back to the tree.
'''



N=26
j=12
text ='''0 3516 3523 4748 6308 2267 7093 2067 3684 7920 2504 3764 8307 2567 1110 1919 1203 1729 4950 4772 1682 4352 7154 5171 5206 7109
3516 0 6249 7474 3386 4993 4171 1961 6410 4998 1554 1286 5385 5293 3836 2861 3929 4455 2028 7498 4408 7078 4232 2249 2284 4187
3523 6249 0 1981 9041 2652 9826 4800 1839 10653 5237 6497 11040 2686 2865 4652 3184 1980 7683 2005 2289 1585 9887 7904 7939 9842
4748 7474 1981 0 10266 3877 11051 6025 3064 11878 6462 7722 12265 3911 4090 5877 4409 3205 8908 784 3514 2018 11112 9129 9164 11067
6308 3386 9041 10266 0 7785 2781 4753 9202 3608 4346 4078 3995 8085 6628 5653 6721 7247 3214 10290 7200 9870 2842 2847 1424 2797
2267 4993 2652 3877 7785 0 8570 3544 2813 9397 3981 5241 9784 1696 1609 3396 1928 858 6427 3901 1033 3481 8631 6648 6683 8586
7093 4171 9826 11051 2781 8570 0 5538 9987 1277 5131 4863 1664 8870 7413 6438 7506 8032 3999 11075 7985 10655 511 3632 2209 1716
2067 1961 4800 6025 4753 3544 5538 0 4961 6365 949 2209 6752 3844 2387 1412 2480 3006 3395 6049 2959 5629 5599 3616 3651 5554
3684 6410 1839 3064 9202 2813 9987 4961 0 10814 5398 6658 11201 2847 3026 4813 3345 2141 7844 3088 2450 2668 10048 8065 8100 10003
7920 4998 10653 11878 3608 9397 1277 6365 10814 0 5958 5690 527 9697 8240 7265 8333 8859 4826 11902 8812 11482 900 4459 3036 2543
2504 1554 5237 6462 4346 3981 5131 949 5398 5958 0 1802 6345 4281 2824 1849 2917 3443 2988 6486 3396 6066 5192 3209 3244 5147
3764 1286 6497 7722 4078 5241 4863 2209 6658 5690 1802 0 6077 5541 4084 3109 4177 4703 2720 7746 4656 7326 4924 2941 2976 4879
8307 5385 11040 12265 3995 9784 1664 6752 11201 527 6345 6077 0 10084 8627 7652 8720 9246 5213 12289 9199 11869 1287 4846 3423 2930
2567 5293 2686 3911 8085 1696 8870 3844 2847 9697 4281 5541 10084 0 1909 3696 2228 1024 6727 3935 1333 3515 8931 6948 6983 8886
1110 3836 2865 4090 6628 1609 7413 2387 3026 8240 2824 4084 8627 1909 0 2239 771 1071 5270 4114 1024 3694 7474 5491 5526 7429
1919 2861 4652 5877 5653 3396 6438 1412 4813 7265 1849 3109 7652 3696 2239 0 2332 2858 4295 5901 2811 5481 6499 4516 4551 6454
1203 3929 3184 4409 6721 1928 7506 2480 3345 8333 2917 4177 8720 2228 771 2332 0 1390 5363 4433 1343 4013 7567 5584 5619 7522
1729 4455 1980 3205 7247 858 8032 3006 2141 8859 3443 4703 9246 1024 1071 2858 1390 0 5889 3229 495 2809 8093 6110 6145 8048
4950 2028 7683 8908 3214 6427 3999 3395 7844 4826 2988 2720 5213 6727 5270 4295 5363 5889 0 8932 5842 8512 4060 2077 2112 4015
4772 7498 2005 784 10290 3901 11075 6049 3088 11902 6486 7746 12289 3935 4114 5901 4433 3229 8932 0 3538 2042 11136 9153 9188 11091
1682 4408 2289 3514 7200 1033 7985 2959 2450 8812 3396 4656 9199 1333 1024 2811 1343 495 5842 3538 0 3118 8046 6063 6098 8001
4352 7078 1585 2018 9870 3481 10655 5629 2668 11482 6066 7326 11869 3515 3694 5481 4013 2809 8512 2042 3118 0 10716 8733 8768 10671
7154 4232 9887 11112 2842 8631 511 5599 10048 900 5192 4924 1287 8931 7474 6499 7567 8093 4060 11136 8046 10716 0 3693 2270 1777
5171 2249 7904 9129 2847 6648 3632 3616 8065 4459 3209 2941 4846 6948 5491 4516 5584 6110 2077 9153 6063 8733 3693 0 1745 3648
5206 2284 7939 9164 1424 6683 2209 3651 8100 3036 3244 2976 3423 6983 5526 4551 5619 6145 2112 9188 6098 8768 2270 1745 0 2225
7109 4187 9842 11067 2797 8586 1716 5554 10003 2543 5147 4879 2930 8886 7429 6454 7522 8048 4015 11091 8001 10671 1777 3648 2225 0'''

m = Matrix (text, N)


print m.getLimbLength(j)

